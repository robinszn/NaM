
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.graphstream.graph.*;
import org.graphstream.graph.implementations.*;
import org.graphstream.ui.view.View;
import org.graphstream.ui.view.Viewer;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zach
 */
public class main extends javax.swing.JFrame {
 
    ArrayList<String> list = new ArrayList<String>();
    MultiGraph graph = new MultiGraph("Network Map");
    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblScanType = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReports = new javax.swing.JTextArea();
        btnGetNetworkDevices = new javax.swing.JButton();
        txtIPAddress = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        cmbScans = new javax.swing.JComboBox();
        btnBrowse = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cmbOutputType = new javax.swing.JComboBox();
        lblScanning = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFromFile = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnGenerateMap = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        GraphDisplay = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaReports = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuOpen = new javax.swing.JMenuItem();
        jMenuSave = new javax.swing.JMenuItem();
        jMenuExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 583, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 367, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Network Asset Manager BETA");
        setResizable(false);

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel3.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Network Asset Manager");
        jLabel1.setToolTipText("");

        lblScanType.setText("Enter IP Address:");
        lblScanType.setToolTipText("");

        txtReports.setColumns(20);
        txtReports.setRows(5);
        txtReports.setName("txtReports"); // NOI18N
        jScrollPane1.setViewportView(txtReports);

        btnGetNetworkDevices.setText("Get Network Devices");
        btnGetNetworkDevices.setName("btnAction"); // NOI18N
        btnGetNetworkDevices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetNetworkDevicesActionPerformed(evt);
            }
        });

        txtIPAddress.setName("txtAddress"); // NOI18N

        btnClear.setText("Clear Report");
        btnClear.setName(""); // NOI18N
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        cmbScans.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Simple Scan", "OS Detection Scan", "Heavy Scan", "Scan from File" }));
        cmbScans.setToolTipText("");
        cmbScans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbScansActionPerformed(evt);
            }
        });

        btnBrowse.setText("Browse");
        btnBrowse.setEnabled(false);
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        jButton3.setLabel("Add IP");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cmbOutputType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Text File", "XML File" }));
        cmbOutputType.setName(""); // NOI18N
        cmbOutputType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOutputTypeActionPerformed(evt);
            }
        });

        lblScanning.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/512_pixels/256_pixels/5_White_logo_on_black_256.jpg"))); // NOI18N

        txtFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromFileActionPerformed(evt);
            }
        });

        jLabel4.setText("Commands: ");

        jLabel5.setText("Output:");

        jLabel6.setText("Scan Type:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGetNetworkDevices, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(226, 226, 226))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(lblScanType))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIPAddress)
                                    .addComponent(txtFromFile, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(cmbScans, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBrowse))
                                    .addComponent(cmbOutputType, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(46, 46, 46))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblScanning)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 19, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblScanType)
                            .addComponent(txtIPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbScans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(btnBrowse))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbOutputType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFromFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(lblScanning)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGetNetworkDevices)
                    .addComponent(btnClear))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Enter IP Address", jPanel3);

        btnGenerateMap.setText("Generate Network Map");
        btnGenerateMap.setName("btnMap"); // NOI18N
        btnGenerateMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateMapActionPerformed(evt);
            }
        });

        jLabel3.setText("Network Map for: ");
        jLabel3.setAutoscrolls(true);
        jLabel3.setName(""); // NOI18N

        javax.swing.GroupLayout GraphDisplayLayout = new javax.swing.GroupLayout(GraphDisplay);
        GraphDisplay.setLayout(GraphDisplayLayout);
        GraphDisplayLayout.setHorizontalGroup(
            GraphDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 764, Short.MAX_VALUE)
        );
        GraphDisplayLayout.setVerticalGroup(
            GraphDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 539, Short.MAX_VALUE)
        );

        jButton2.setText("Popout Graph");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(btnGenerateMap, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAddress))
                            .addComponent(GraphDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(GraphDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerateMap)
                    .addComponent(jButton2))
                .addGap(13, 13, 13))
        );

        lblAddress.getAccessibleContext().setAccessibleName("lblAddress");

        jTabbedPane1.addTab("System Information", jPanel4);

        txtAreaReports.setColumns(20);
        txtAreaReports.setRows(5);
        jScrollPane3.setViewportView(txtAreaReports);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Vulnerability Scanner", jPanel5);

        jMenu1.setText("File");

        jMenuOpen.setText("Open");
        jMenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuOpen);

        jMenuSave.setText("Save As");
        jMenuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSaveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuSave);

        jMenuExit.setText("Exit");
        jMenu1.add(jMenuExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem1.setText("jMenuItem1");
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Tools");
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Help");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 847, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("JTree");

        setSize(new java.awt.Dimension(867, 763));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateMapActionPerformed
            graph.clear();
           
            Viewer viewer = new Viewer(graph, Viewer.ThreadingModel.GRAPH_IN_ANOTHER_THREAD); 
            viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.HIDE_ONLY);
            
            for(String address : list)
            {
            graph.addNode(address);
            }
            for (int i = 0; i < graph.getNodeCount(); i++) {
               Node node1 = graph.getNode(i);
                if (i > 0) {

                Node node2 = graph.getNode(i-1);
                Node firstNode = graph.getNode(0);
                Node connectNode = graph.getNode(i/2);
                
                graph.addEdge((i+"a"), node1, node2);
                graph.addEdge((i+"b"), node1, firstNode);
                graph.addEdge((i+"c"), node1, connectNode);
               }     
//              graph.addEdge(i + "-" + (i - 1), i + "", (i - 1) + "");
//		graph.addEdge(i + "--" + (i / 2), i + "", (i / 2) + "");
                //JOptionPane.showMessageDialog(null, node2);
                
}
                      
           
          
     for (Node node : graph) {
        node.addAttribute("ui.label", node.getId());
    }
             View view = viewer.addDefaultView(rootPaneCheckingEnabled);   // false indicates "no JFrame".
             viewer.enableAutoLayout();
             //view.getCamera().setViewCenter(2, 3 ,4);
             //view.getCamera().setViewPercent(0.7);
             //view.getCamera().resetView();
             GraphDisplay.add((Component)view); 
   
    }//GEN-LAST:event_btnGenerateMapActionPerformed

    private void jMenuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSaveActionPerformed
        
    }//GEN-LAST:event_jMenuSaveActionPerformed

    private void jMenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        
        File f = chooser.getSelectedFile();
        String fileName = f.getAbsolutePath();
        txtReports.setText(fileName);
        
    }//GEN-LAST:event_jMenuOpenActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          graph.clear();
            
           for(String address : list)
            {
            graph.addNode(address);
            }
            for (int i = 0; i < graph.getNodeCount(); i++) {
               Node node1 = graph.getNode(i);
                if (i > 0) {

                Node node2 = graph.getNode(i-1);
                Node firstNode = graph.getNode(0);
                Node connectNode = graph.getNode(i/2);
                
                graph.addEdge((i+"a"), node1, node2);
                graph.addEdge((i+"b"), node1, firstNode);
                graph.addEdge((i+"c"), node1, connectNode);
               }
            } 
                for (Node node : graph) {
        node.addAttribute("ui.label", node.getId());
    }
                graph.display().setCloseFramePolicy(Viewer.CloseFramePolicy.CLOSE_VIEWER);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmbOutputTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOutputTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbOutputTypeActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        String text = txtIPAddress.getText();
        list.add(text);

        txtReports.append(list.toString());
        txtReports.append("\n");

        txtIPAddress.setText("");
        

    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        String fileName = f.getAbsolutePath();
        txtIPAddress.setText(fileName);

    }//GEN-LAST:event_btnBrowseActionPerformed

    private void cmbScansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbScansActionPerformed
        if(cmbScans.getSelectedIndex() == 0)
        {
            lblScanType.setText("Enter IP Address: ");
            cmbOutputType.setEnabled(true);
            btnBrowse.setEnabled(false);
        }
        if(cmbScans.getSelectedIndex() == 1)
        {
            lblScanType.setText("Enter IP Address: ");
            cmbOutputType.setEnabled(true);
            btnBrowse.setEnabled(false);
        }
        if(cmbScans.getSelectedIndex() == 2)
        {
            lblScanType.setText("Enter IP Address: ");
            cmbOutputType.setEnabled(true);
            btnBrowse.setEnabled(false);
        }
        else if(cmbScans.getSelectedIndex() == 3)
        {
            lblScanType.setText("Enter File Name: ");
            cmbOutputType.setEnabled(false);
            btnBrowse.setEnabled(true);
            
        }

    }//GEN-LAST:event_cmbScansActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtReports.setText((""));
        txtIPAddress.setText("");
        list.clear();
        graph.clear();
        btnBrowse.setEnabled(false);
        
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnGetNetworkDevicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetNetworkDevicesActionPerformed
        txtReports.append("Initiating Scan..." + "\n");
        lblScanning.setText("Scan Complete!");
        

        String IPAddress = txtIPAddress.getText();
        lblAddress.setText(IPAddress);
        ArrayList Results = getIPAddressList();
        txtReports.append(Results.toString());
        graph.clear();
        try
        {
            if(cmbScans.getSelectedIndex() == 0)
        {
            FileReader reader = new FileReader("ip.txt");
            BufferedReader br = new BufferedReader(reader);
            txtAreaReports.read(br, null);
            br.close();
            txtAreaReports.requestFocus();
        }
            else if(cmbScans.getSelectedIndex() == 2)
            {
//                Scanner s = new Scanner(new File(txtIPAddress.toString()));
//                while (s.hasNextLine()){
//                    list.add(s.nextLine());
//                                    }
//                s.close();
                
                FileReader reader = new FileReader("ip1.txt");
            BufferedReader br = new BufferedReader(reader);
            txtAreaReports.read(br, null);
            br.close();
            txtAreaReports.requestFocus();
            }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }

//           //Graph Details
//            Viewer viewer = new Viewer(graph,Viewer.ThreadingModel.GRAPH_IN_ANOTHER_THREAD); 
//            
//            View view = viewer.addDefaultView(false);
//            
//
//            for(String address : list)
//            {
//            graph.addNode(address);
//            }
//            for (int i = 0; i < graph.getNodeCount(); i++) {
//               Node node1 = graph.getNode(i);
//                if (i > 0) {
//
//                Node node2 = graph.getNode(i-1);
//                Node firstNode = graph.getNode(0);
//                Node connectNode = graph.getNode(i/2);
//                
//                graph.addEdge((i+"a"), node1, node2);
//                graph.addEdge((i+"b"), node1, firstNode);
//                graph.addEdge((i+"c"), node1, connectNode);
//               }     
////              graph.addEdge(i + "-" + (i - 1), i + "", (i - 1) + "");
////		graph.addEdge(i + "--" + (i / 2), i + "", (i / 2) + "");
//                //JOptionPane.showMessageDialog(null, node2);
//                
//}
//                      
//            //View view = viewer.addDefaultView(false);   // false indicates "no JFrame".
//          
//     for (Node node : graph) {
//        node.addAttribute("ui.label", node.getId());
//    }       
//             view.getCamera().setViewPercent(2.5);
//             viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.CLOSE_VIEWER);
//
//             GraphDisplay.add((Component) view);
//             
             //list.clear();
        
        
    }//GEN-LAST:event_btnGetNetworkDevicesActionPerformed

    private void txtFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromFileActionPerformed
    
    }//GEN-LAST:event_txtFromFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GraphDisplay;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnGenerateMap;
    private javax.swing.JButton btnGetNetworkDevices;
    private javax.swing.JComboBox cmbOutputType;
    private javax.swing.JComboBox cmbScans;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuOpen;
    private javax.swing.JMenuItem jMenuSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblScanType;
    private javax.swing.JLabel lblScanning;
    private javax.swing.JTextArea txtAreaReports;
    private javax.swing.JTextField txtFromFile;
    private javax.swing.JTextField txtIPAddress;
    private javax.swing.JTextArea txtReports;
    // End of variables declaration//GEN-END:variables

 public ArrayList<String> getIPAddressList(){
    String IPAddress = txtIPAddress.getText();
    String Commands = "";
    ArrayList<String> addresses = new ArrayList<String>();
    
     
    for(String address : list)
    {
    try {
        if(jButton3.action(null, this))
        { 
        }
        if(cmbScans.getSelectedIndex() == 0)
        {
            
            if(cmbOutputType.getSelectedIndex() == 0)
           {
            Commands = "nmap -sn -oN ip.txt ";  
           }
            else 
            {
              Commands = "nmap -sn -oX outputfile.xml ";   
            }
        }
        if(cmbScans.getSelectedIndex() == 1)
        {
            
            if(cmbOutputType.getSelectedIndex() == 0)
           {
            Commands = "nmap -A -oN ip.txt ";
           }
           else 
           {
              Commands = "nmap -A -oX outputfile.xml ";  
           }
        }
        if(cmbScans.getSelectedIndex() == 2)
        {
           if(cmbOutputType.getSelectedIndex() == 0)
           {
         Commands = "nmap -T4 -A -v -oN ip.txt ";
           }
           else 
           {
         Commands = "nmap -T4 -A -v -oX outputfile.txt ";
           }
        }
        if(cmbScans.getSelectedIndex() == 3)
        {
         list.add(IPAddress);
         Commands = "nmap -iL ";
        }
        else
        {
            Commands = txtFromFile.getText();
        }  
        Runtime rt = Runtime.getRuntime();
        Process pr = rt.exec(Commands + address);
        BufferedReader input = new BufferedReader(
        new InputStreamReader(pr.getInputStream()));
        String line = null;
        while((line=input.readLine()) != null) {
            System.out.println(line);
            txtReports.append(line + "\n");
            if (line.contains("Nmap scan report for")){
                String[] elements = line.split(" ");
                int end = elements.length-1;
                String ip_address = elements[end];
                String line2 = input.readLine();
                if (line2.contains("Host is up")){
                    addresses.add(ip_address + " (Host is up!)" + "\n");
                }
            }
        }

        int exitVal = pr.waitFor();
        txtAreaReports.append("Exited with error code "+exitVal);
        System.out.println("Exited with error code "+exitVal);
    }
    catch(Exception e){
        e.printStackTrace();
        System.exit(0);
    }
    }
    return addresses;
}
 
 
}

